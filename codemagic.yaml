workflows:
  android-workflow:
    name: Android Workflow
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      android_signing:
        - keystore_reference
      groups:
        - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS)
      vars:
        PACKAGE_NAME: "net.coventry.sleepless"
        GOOGLE_PLAY_TRACK: "alpha"
      flutter: stable
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Build AAB with Flutter
        script: |
          BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
          flutter build appbundle --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER
    artifacts:
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - loganvaleski@gmail.com
          - jvaleski@gmail.com
        notify:
          success: true
          failure: false
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: $GOOGLE_PLAY_TRACK
        submit_as_draft: true
  ios-workflow:
    name: iOS Workflow
    instance_type: mac_mini_m2
    max_build_duration: 120
    integrations:
      app_store_connect: codemagic
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: net.coventry.sleepless
      vars:
        XCODE_WORKSPACE: "ios/Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Install pods
        script: |
          cd ios && pod install
      - name: Flutter build ipa
        script: |
          flutter build ipa --release \
            --export-options-plist=/Users/builder/export_options.plist
      - name: Upload debug symbols to Firebase Crashlytics
        script: |
          if [ "$FCI_BUILD_TYPE" == "release" ]; then
            echo "Uploading debug symbols to Firebase Crashlytics"
            find "$FCI_BUILD_DIR/build/ios/archive/Runner.xcarchive/dSYMs" \
              -name "*.dSYM" \
              -exec "$FCI_BUILD_DIR/ios/Pods/FirebaseCrashlytics/upload-symbols" \
              -gsp "$FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist" \
              -p ios {} +
          fi
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - loganvaleski@gmail.com
          - jvaleski@gmail.com
        notify:
          success: true
          failure: false