workflows:
  android-workflow:
    name: Android Workflow
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      android_signing:
        - meandering-keystore
      groups:
        - production
        - google_credentials
      vars:
        PACKAGE_NAME: "net.coventry.sleepless"
      flutter: stable
    scripts:
      - name: Run unit tests
        script: |
          flutter test --dart-define=GF_GET_AUDIO_URL=$GF_GET_AUDIO_URL --dart-define=GS_GET_THUMBNAIL_URL=$GS_GET_THUMBNAIL_URL --dart-define=GF_GET_AUDIO_LIST_JSON_URL=$GF_GET_AUDIO_LIST_JSON_URL
      - name: Build AAB with Flutter
        script: |
          flutter build appbundle --release \
            --dart-define=GF_GET_AUDIO_URL=$GF_GET_AUDIO_URL \
            --dart-define=GS_GET_THUMBNAIL_URL=$GS_GET_THUMBNAIL_URL \
            --dart-define=GF_GET_AUDIO_LIST_JSON_URL=$GF_GET_AUDIO_LIST_JSON_URL
      - name: Build APK with Flutter
        script: |
          flutter build apk --release \
            --dart-define=GF_GET_AUDIO_URL=$GF_GET_AUDIO_URL \
            --dart-define=GS_GET_THUMBNAIL_URL=$GS_GET_THUMBNAIL_URL \
            --dart-define=GF_GET_AUDIO_LIST_JSON_URL=$GF_GET_AUDIO_LIST_JSON_URL
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
      - build/app/outputs/bundle/release/app-release.aab
    publishing:
      email:
        recipients:
          - loganvaleski@gmail.com
          - jvaleski@gmail.com
        notify:
          success: true
          failure: false

  ios-workflow:
    name: iOS Workflow
    instance_type: mac_mini_m2
    max_build_duration: 120
    integrations:
      app_store_connect: codemagic
    environment:
      groups:
        - production
      ios_signing:
        distribution_type: app_store
        bundle_identifier: net.coventry.sleepless
      vars:
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Run unit tests
        script: |
          flutter test --dart-define=GF_GET_AUDIO_URL=$GF_GET_AUDIO_URL --dart-define=GS_GET_THUMBNAIL_URL=$GS_GET_THUMBNAIL_URL --dart-define=GF_GET_AUDIO_LIST_JSON_URL=$GF_GET_AUDIO_LIST_JSON_URL
      - name: Run integration tests
        script: |
          flutter emulators --launch apple_ios_simulator
          flutter -d iPhone test integration_test/app_test.dart --dart-define=GF_GET_AUDIO_URL=$GF_GET_AUDIO_URL --dart-define=GS_GET_THUMBNAIL_URL=$GS_GET_THUMBNAIL_URL --dart-define=GF_GET_AUDIO_LIST_JSON_URL=$GF_GET_AUDIO_LIST_JSON_URL
      - name: Set up code signing settings
        script: |
          xcode-project use-profiles
      - name: Flutter build ipa and automatic versioning
        script: |
          flutter build ipa --release \
            --build-name=0.1.6 \
            --build-number=10 \
            --export-options-plist=/Users/builder/export_options.plist \
            --dart-define=GF_GET_AUDIO_URL=$GF_GET_AUDIO_URL \
            --dart-define=GS_GET_THUMBNAIL_URL=$GS_GET_THUMBNAIL_URL \
            --dart-define=GF_GET_AUDIO_LIST_JSON_URL=$GF_GET_AUDIO_LIST_JSON_URL
    artifacts:
      - build/ios/ipa/*.ipa
    publishing:
      scripts:
        - name: Upload debug symbols to Firebase Crashlytics
          script: | 
            echo "Find build artifacts"
            dsymPath=$(find $CM_BUILD_DIR/build/ios/archive/Runner.xcarchive -name "*.dSYM" | head -1)
            if [[ -z ${dsymPath} ]]
            then
              echo "No debug symbols were found, skip publishing to Firebase Crashlytics"
            else
              echo "Publishing debug symbols from $dsymPath to Firebase Crashlytics"
              ls -d -- ios/Pods/*
              $CM_BUILD_DIR/ios/Pods/FirebaseCrashlytics/upload-symbols \
                -gsp ios/Runner/GoogleService-Info.plist -p ios $dsymPath
            fi
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false
      email:
        recipients:
          - loganvaleski@gmail.com
          - jvaleski@gmail.com
        notify:
          success: true
          failure: false